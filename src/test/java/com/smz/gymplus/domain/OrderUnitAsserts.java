package com.smz.gymplus.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class OrderUnitAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrderUnitAllPropertiesEquals(OrderUnit expected, OrderUnit actual) {
        assertOrderUnitAutoGeneratedPropertiesEquals(expected, actual);
        assertOrderUnitAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrderUnitAllUpdatablePropertiesEquals(OrderUnit expected, OrderUnit actual) {
        assertOrderUnitUpdatableFieldsEquals(expected, actual);
        assertOrderUnitUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrderUnitAutoGeneratedPropertiesEquals(OrderUnit expected, OrderUnit actual) {
        assertThat(expected)
            .as("Verify OrderUnit auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrderUnitUpdatableFieldsEquals(OrderUnit expected, OrderUnit actual) {
        assertThat(expected)
            .as("Verify OrderUnit relevant properties")
            .satisfies(e -> assertThat(e.getQuantity()).as("check quantity").isEqualTo(actual.getQuantity()))
            .satisfies(e -> assertThat(e.getUnitPrice()).as("check unitPrice").isEqualTo(actual.getUnitPrice()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertOrderUnitUpdatableRelationshipsEquals(OrderUnit expected, OrderUnit actual) {
        assertThat(expected)
            .as("Verify OrderUnit relationships")
            .satisfies(e -> assertThat(e.getOrderUnits()).as("check orderUnits").isEqualTo(actual.getOrderUnits()))
            .satisfies(e -> assertThat(e.getProducts()).as("check products").isEqualTo(actual.getProducts()));
    }
}
